name: E2E Tests

on:
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: ðŸŸ¢ Setup Node.js com cache para npm
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: ðŸ“¦ Instalar dependÃªncias
        run: npm ci

      - name: ðŸ§ª Rodar Cypress (E2E) contra o cÃ³digo do PR
        uses: cypress-io/github-action@v6
        with:
          # Inicia o servidor de desenvolvimento em segundo plano usando o seu script do package.json
          start: npm run dev
          # Espera que a aplicaÃ§Ã£o esteja pronta em localhost:8080 antes de iniciar os testes
          wait-on: 'http://localhost:8080'
          # Define um tempo de espera generoso para o servidor iniciar
          wait-on-timeout: 300 # 5 minutos
          browser: chrome
          record: true
          publish-summary: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Define o ambiente para 'test', que Ã© uma boa prÃ¡tica
          NODE_ENV: test

      - name: ðŸ“¤ Upload de Artefatos em caso de falha
        # Este passo sÃ³ Ã© executado se os testes falharem
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots

